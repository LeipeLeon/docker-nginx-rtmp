# https://www.vultr.com/docs/setup-nginx-on-ubuntu-to-stream-live-hls-video

worker_processes  1;
error_log  logs/error.log debug;
events {
  worker_connections  1024;
}

rtmp {
  server {
    listen 1935;
    allow play all;

    #creates our "live" full-resolution HLS videostream from our incoming encoder stream and tells where to put the HLS video manifest and video fragments
    # http://128.199.74.83/live/my-stream-key/index.m3u8
    application live {
      allow play all;
      live on;
      record all;
      record_path /video_recordings;
      record_unique on; # appends current timestamp
      # record_suffix -%Y-%m-%d-%H%M%S.flv;
      # hls on;
      # hls_variant _low BANDWIDTH=160000;
      # hls_variant _mid BANDWIDTH=320000;
      # hls_variant _hi  BANDWIDTH=640000;

      #creates the downsampled or "trans-rated" mobile video stream as a 400kbps, 480x360 sized video
      # exec ffmpeg -i rtmp://localhost/$app/$name -threads 0 -c:v libx264 -profile:v baseline -b:v 400k -s 480x360 -f flv -c:a copy -preset veryfast -maxrate 400k -bufsize 400k -r 30 rtmp://localhost/mobile/$name; #  -vsync cfr
      # exec ffmpeg -i rtmp://localhost/$app/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 500K -s  640x360  -f flv -c:a aac  -b:a 56k rtmp://localhost/live360/$name ; #  -ac 1 -strict -2
      # exec ffmpeg -i rtmp://localhost/$app/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 825K -s  960x540  -f flv -c:a aac  -b:a 56k rtmp://localhost/live540/$name ; #  -ac 1 -strict -2
      # exec ffmpeg -i rtmp://localhost/$app/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 950K -s 1280x720  -f flv -c:a aac  -b:a 56k rtmp://localhost/live720/$name ; #  -ac 1 -strict -2
      # exec ffmpeg -i rtmp://localhost/$app/$name
      #         -c:a libfdk_aac -b:a 32k  -c:v libx264 -b:v 128K -f flv rtmp://localhost/hls/$name_low
      #         -c:a libfdk_aac -b:a 64k  -c:v libx264 -b:v 256k -f flv rtmp://localhost/hls/$name_mid
      #         -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 512K -f flv rtmp://localhost/hls/$name_hi;


      exec ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1
                  -c:v libx264 -c:a aac -strict -2 -b:v  256k -b:a  32k -vf  "scale=480:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_low
                  -c:v libx264 -c:a aac -strict -2 -b:v  768k -b:a  96k -vf  "scale=720:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_mid
                  -c:v libx264 -c:a aac -strict -2 -b:v 1024k -b:a 128k -vf  "scale=960:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_high
                  -c:v libx264 -c:a aac -strict -2 -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_hd720
                  -c copy -f flv rtmp://localhost/show/$name_src
                  2>>/tmp/log;
    }


    application show {
      live on;
      hls on;
      hls_nested on;
      hls_path /HLS/live;
      hls_fragment 6s;

      hls_variant _low   BANDWIDTH=288000;
      hls_variant _mid   BANDWIDTH=448000;
      hls_variant _high  BANDWIDTH=1152000;
      hls_variant _hd720 BANDWIDTH=2048000;
      hls_variant _src   BANDWIDTH=4096000;

      # exec ffmpeg -i rtmp://localhost/$app/$name -threads 1 -c:a libmp3lame -b:a 64k -legacy_icecast 1 -content_type audio/mpeg -ice_name "DemoStream" -f mp3 icecast://source:N1yNLvqy@streams.kerkdienstgemist.nl:80/91322051;
    }

    #creates our "mobile" lower-resolution HLS videostream from the ffmpeg-created stream and tells where to put the HLS video manifest and video fragments
    #application live360 {
    #  allow play all;
    #  live on;
    #  hls on;
    #  hls_continuous on;
    #  hls_nested on;
    #  hls_path /HLS/mobile;
    #  hls_fragment 6s;
    #  hls_fragment_naming timestamp
    #}

    #allows you to play your recordings of your live streams using a URL like "rtmp://my-ip:1935/vod/filename.flv"
    # http://128.199.74.83/vod/filename.flv
    application vod {
      play /video_recordings;
    }
  }
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  server {
    listen 80;

    #creates the http-location for our full-resolution (desktop) HLS stream - "http://my-ip/live/my-stream-key/index.m3u8"
    location /show {
      types {
        application/vnd.apple.mpegurl m3u8;
      }
      alias /HLS/live;
      add_header Cache-Control no-cache;
      # To avoid issues with cross-domain HTTP requests (e.g. during development)
      add_header Access-Control-Allow-Origin *;
    }

    #creates the http-location for our mobile-device HLS stream - "http://my-ip/mobile/my-stream-key/index.m3u8"
    location /mobile {
      types {
        application/vnd.apple.mpegurl m3u8;
      }
      alias /HLS/mobile;
      add_header Cache-Control no-cache;
      # To avoid issues with cross-domain HTTP requests (e.g. during development)
      add_header Access-Control-Allow-Origin *;
    }

    #allows us to see how stats on viewers on our Nginx site using a URL like: "http://my-ip/stats"
    location /stats {
      stub_status;
    }

    #allows us to host some webpages which can show our videos: "http://my-ip/my-page.html"
    location / {
      root   html;
      index  index.html index.htm;
    }
  }
}
